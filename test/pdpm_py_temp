## Chapter 5 Homework

This assignment is based on a project created by the textbook
authors to go with chapter 5.  Their version of the instructions,
which includes diagrams and explanations that might be helpful to
you, can be found
[here](http://csapp.cs.cmu.edu/public/perflab.pdf).

### Part 1

Start with the code below, with comments indicating where you
need to complete several functions (more practice doing tricky
things in C!) before moving on to part 2.

\begin{Verbatim}[commandchars=\\\{\}]
\PY{c+cm}{/*}
\PY{c+cm}{ * pixels.c}
\PY{c+cm}{ *}
\PY{c+cm}{ * David Owen}
\PY{c+cm}{ *}
\PY{c+cm}{ * Based on idea from Bryant and O\PYZsq{}Hallaron\PYZsq{}s performance lab}
\PY{c+cm}{ * project for chapter 5 of Computer Systems: A Programmer\PYZsq{}s}
\PY{c+cm}{ * Perspective.}
\PY{c+cm}{ */}

\PY{c+cp}{\PYZsh{}}\PY{c+cp}{define N 5 }\PY{c+c1}{// (1 \PYZlt{}\PYZlt{} 13) // Use a small value to check}
                         \PY{c+c1}{// correctness, a big value to check}
                         \PY{c+c1}{// performance.}
\PY{c+cp}{\PYZsh{}}\PY{c+cp}{include} \PY{c+cpf}{\PYZlt{}stdio.h\PYZgt{}}
\PY{c+cp}{\PYZsh{}}\PY{c+cp}{include} \PY{c+cpf}{\PYZlt{}stdlib.h\PYZgt{}}
\PY{c+cp}{\PYZsh{}}\PY{c+cp}{include} \PY{c+cpf}{\PYZlt{}time.h\PYZgt{}}

\PY{k}{typedef} \PY{k+kt}{unsigned} \PY{k+kt}{short} \PY{n}{pixel}\PY{p}{;}

\PY{k+kt}{void} \PY{n+nf}{pack\PYZus{}pixel}\PY{p}{(}\PY{k+kt}{float} \PY{n}{r}\PY{p}{,} \PY{k+kt}{float} \PY{n}{g}\PY{p}{,} \PY{k+kt}{float} \PY{n}{b}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{o}{*}\PY{n}{p} \PY{o}{=} \PY{p}{(}\PY{p}{(}\PY{p}{(}\PY{k+kt}{int}\PY{p}{)} \PY{p}{(}\PY{n}{r} \PY{o}{*} \PY{l+m+mi}{31}\PY{p}{)} \PY{o}{\PYZam{}} \PY{l+m+mh}{0x1F}\PY{p}{)} \PY{o}{\PYZlt{}}\PY{o}{\PYZlt{}} \PY{l+m+mi}{11}\PY{p}{)} \PY{o}{+}
         \PY{p}{(}\PY{p}{(}\PY{p}{(}\PY{k+kt}{int}\PY{p}{)} \PY{p}{(}\PY{n}{g} \PY{o}{*} \PY{l+m+mi}{63}\PY{p}{)} \PY{o}{\PYZam{}} \PY{l+m+mh}{0x3F}\PY{p}{)} \PY{o}{\PYZlt{}}\PY{o}{\PYZlt{}} \PY{l+m+mi}{5}\PY{p}{)} \PY{o}{+}
          \PY{p}{(}\PY{p}{(}\PY{k+kt}{int}\PY{p}{)} \PY{p}{(}\PY{n}{b} \PY{o}{*} \PY{l+m+mi}{31}\PY{p}{)} \PY{o}{\PYZam{}} \PY{l+m+mh}{0x1F}\PY{p}{)}\PY{p}{;}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// Complete this function, using pack\PYZus{}pixel to help you}
\PY{c+c1}{// understand what it should do.  (Notice that the green value}
\PY{c+c1}{// gets more bits than red or blue.  Read more about this here:}
\PY{c+c1}{// http://en.wikipedia.org/wiki/High\PYZus{}color\PYZsh{}16\PYZhy{}bit\PYZus{}high\PYZus{}color}
\PY{k+kt}{void} \PY{n+nf}{unpack\PYZus{}pixel}\PY{p}{(}\PY{n}{pixel} \PY{n}{p}\PY{p}{,} \PY{k+kt}{float} \PY{o}{*}\PY{n}{r}\PY{p}{,} \PY{k+kt}{float} \PY{o}{*}\PY{n}{g}\PY{p}{,} \PY{k+kt}{float} \PY{o}{*}\PY{n}{b}\PY{p}{)}
\PY{p}{\PYZob{}}
\PY{p}{\PYZcb{}}

\PY{k+kt}{void} \PY{n+nf}{pixel\PYZus{}to\PYZus{}gray}\PY{p}{(}\PY{n}{pixel} \PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{float} \PY{n}{r}\PY{p}{,} \PY{n}{g}\PY{p}{,} \PY{n}{b}\PY{p}{,} \PY{n}{avg}\PY{p}{;}
    \PY{n}{unpack\PYZus{}pixel}\PY{p}{(}\PY{n}{p}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{r}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{g}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{b}\PY{p}{)}\PY{p}{;}
    \PY{n}{avg} \PY{o}{=} \PY{p}{(}\PY{n}{r} \PY{o}{+} \PY{n}{g} \PY{o}{+} \PY{n}{b}\PY{p}{)} \PY{o}{/} \PY{l+m+mi}{3}\PY{p}{;}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{n}{avg}\PY{p}{,} \PY{n}{avg}\PY{p}{,} \PY{n}{avg}\PY{p}{,} \PY{n}{q}\PY{p}{)}\PY{p}{;}
\PY{p}{\PYZcb{}}

\PY{k+kt}{void} \PY{n+nf}{array\PYZus{}to\PYZus{}gray}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{;}
    
    \PY{k}{for} \PY{p}{(}\PY{n}{i} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{i} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{i}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{k}{for} \PY{p}{(}\PY{n}{j} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{j} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{j}\PY{o}{+}\PY{o}{+}\PY{p}{)}
            \PY{n}{pixel\PYZus{}to\PYZus{}gray}\PY{p}{(}\PY{n}{p}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{q}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{)}\PY{p}{;}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// Using pixel\PYZus{}to\PYZus{}gray as a model, and the factors listed}
\PY{c+c1}{// below, complete this function to get a sepia tone version of}
\PY{c+c1}{// a pixel.  (If the new value for any color exceeds 1, set it}
\PY{c+c1}{// to 1).}
\PY{c+c1}{//     new\PYZus{}r = r * .393 + g * .769 + b * .189}
\PY{c+c1}{//     new\PYZus{}g = r * .349 + g * .686 + b * .168}
\PY{c+c1}{//     new\PYZus{}b = r * .272 + g * .534 + b * .131}
\PY{k+kt}{void} \PY{n+nf}{pixel\PYZus{}to\PYZus{}sepia}\PY{p}{(}\PY{n}{pixel} \PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// ...And, once you have a single\PYZhy{}pixel sepia function, use it}
\PY{c+c1}{// to make a sepia tone version of an array of pixels.}
\PY{k+kt}{void} \PY{n+nf}{array\PYZus{}to\PYZus{}sepia}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
\PY{p}{\PYZcb{}}

\PY{k+kt}{void} \PY{n+nf}{transpose}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{;}
    
    \PY{k}{for} \PY{p}{(}\PY{n}{i} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{i} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{i}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{k}{for} \PY{p}{(}\PY{n}{j} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{j} \PY{o}{\PYZlt{}}\PY{o}{=} \PY{n}{i}\PY{p}{;} \PY{n}{j}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{p}{\PYZob{}}
            \PY{n}{q}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]} \PY{o}{=} \PY{n}{p}\PY{p}{[}\PY{n}{j} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{i}\PY{p}{]}\PY{p}{;}
            
            \PY{k}{if} \PY{p}{(}\PY{n}{j} \PY{o}{!}\PY{o}{=} \PY{n}{i}\PY{p}{)}
                \PY{n}{q}\PY{p}{[}\PY{n}{j} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{i}\PY{p}{]} \PY{o}{=} \PY{n}{p}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{;}
        \PY{p}{\PYZcb{}}
\PY{p}{\PYZcb{}}

\PY{k+kt}{void} \PY{n+nf}{flip\PYZus{}vertical}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{;}
    
    \PY{k}{for} \PY{p}{(}\PY{n}{i} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{i} \PY{o}{\PYZlt{}}\PY{o}{=} \PY{n}{N} \PY{o}{/} \PY{l+m+mi}{2}\PY{p}{;} \PY{n}{i}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{k}{for} \PY{p}{(}\PY{n}{j} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{j} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{j}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{p}{\PYZob{}}
            \PY{n}{q}\PY{p}{[}\PY{p}{(}\PY{n}{N} \PY{o}{\PYZhy{}} \PY{n}{i} \PY{o}{\PYZhy{}} \PY{l+m+mi}{1}\PY{p}{)} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]} \PY{o}{=} \PY{n}{p}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{;}
            
            \PY{k}{if} \PY{p}{(}\PY{n}{i} \PY{o}{\PYZlt{}} \PY{n}{N} \PY{o}{/} \PY{l+m+mi}{2}\PY{p}{)}
                \PY{n}{q}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]} \PY{o}{=} \PY{n}{p}\PY{p}{[}\PY{p}{(}\PY{n}{N} \PY{o}{\PYZhy{}} \PY{n}{i} \PY{o}{\PYZhy{}} \PY{l+m+mi}{1}\PY{p}{)} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{;}
        \PY{p}{\PYZcb{}}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// Using flip\PYZus{}vertical as a guide, complete this function so}
\PY{c+c1}{// that it creates a horizontally flipped version of an array}
\PY{c+c1}{// of pixels.}
\PY{k+kt}{void} \PY{n+nf}{flip\PYZus{}horizontal}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// In part 2 you\PYZsq{}ll be creating new (and hopefully faster)}
\PY{c+c1}{// versions of this function.}
\PY{k+kt}{void} \PY{n+nf}{rotate1}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{n}{pixel} \PY{o}{*}\PY{n}{t} \PY{o}{=} \PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{p}{)} \PY{n}{calloc}\PY{p}{(}\PY{n}{N} \PY{o}{*} \PY{n}{N}\PY{p}{,} \PY{k}{sizeof}\PY{p}{(}\PY{n}{pixel}\PY{p}{)}\PY{p}{)}\PY{p}{;}
    \PY{n}{transpose}\PY{p}{(}\PY{n}{p}\PY{p}{,} \PY{n}{t}\PY{p}{)}\PY{p}{;}
    \PY{n}{flip\PYZus{}vertical}\PY{p}{(}\PY{n}{t}\PY{p}{,} \PY{n}{q}\PY{p}{)}\PY{p}{;}
    \PY{n}{free}\PY{p}{(}\PY{n}{t}\PY{p}{)}\PY{p}{;}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// Complete this function based on the description given below.}

\PY{c+c1}{// Returns pixel with R, G, B values equal to the average of pixel}
\PY{c+c1}{// (i, j) and its 8 neighbors\PYZsq{} R, G, B values.}
\PY{c+c1}{//}
\PY{c+c1}{// For pixel (i, j), these are the pixels that should be averaged:}
\PY{c+c1}{//}
\PY{c+c1}{// (i \PYZhy{} 1, j \PYZhy{} 1) | (i \PYZhy{} 1, j) | (i \PYZhy{} 1, j + 1)}
\PY{c+c1}{// \PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}+\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}+\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}}
\PY{c+c1}{// (i, j \PYZhy{} 1)     | (i, j)     | (i, j + 1)}
\PY{c+c1}{// \PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}+\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}+\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}}
\PY{c+c1}{// (i + 1, j \PYZhy{} 1) | (i + 1, j) | (i + 1, j + 1)}
\PY{c+c1}{//}
\PY{c+c1}{// For cases where (i, j) is too close to the top or bottom, or}
\PY{c+c1}{// to a side, the pixels that would be beyond the edge should be}
\PY{c+c1}{// left out.}
\PY{k+kt}{void} \PY{n+nf}{average}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{k+kt}{int} \PY{n}{j}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// In part 2 you\PYZsq{}ll be creating new (hopefully faster) versions}
\PY{c+c1}{// of this function.}
\PY{k+kt}{void} \PY{n+nf}{smooth1}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{,} \PY{n}{pixel} \PY{o}{*}\PY{n}{q}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{;}

    \PY{k}{for} \PY{p}{(}\PY{n}{i} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{i} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{i}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{k}{for} \PY{p}{(}\PY{n}{j} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{j} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{j}\PY{o}{+}\PY{o}{+}\PY{p}{)}
            \PY{n}{average}\PY{p}{(}\PY{n}{p}\PY{p}{,} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{q}\PY{p}{[}\PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{]}\PY{p}{)}\PY{p}{;}
\PY{p}{\PYZcb{}}

\PY{c+c1}{// Use this for testing (with small values of N).}
\PY{k+kt}{void} \PY{n+nf}{print\PYZus{}array}\PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{n}{p}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{int} \PY{n}{i}\PY{p}{,} \PY{n}{j}\PY{p}{;}
    \PY{k+kt}{float} \PY{n}{r}\PY{p}{,} \PY{n}{g}\PY{p}{,} \PY{n}{b}\PY{p}{;}
    
    \PY{k}{if} \PY{p}{(}\PY{n}{N} \PY{o}{\PYZgt{}} \PY{l+m+mi}{6}\PY{p}{)}
    \PY{p}{\PYZob{}}
        \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s}{TOO BIG TO PRINT!}\PY{l+s+se}{\PYZbs{}n}\PY{l+s}{\PYZdq{}}\PY{p}{)}\PY{p}{;}
        \PY{k}{return}\PY{p}{;}
    \PY{p}{\PYZcb{}}
    
    \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s+se}{\PYZbs{}n}\PY{l+s}{\PYZdq{}}\PY{p}{)}\PY{p}{;}

    \PY{k}{for} \PY{p}{(}\PY{n}{i} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{i} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{i}\PY{o}{+}\PY{o}{+}\PY{p}{)}
    \PY{p}{\PYZob{}}
        \PY{k}{for} \PY{p}{(}\PY{n}{j} \PY{o}{=} \PY{l+m+mi}{0}\PY{p}{;} \PY{n}{j} \PY{o}{\PYZlt{}} \PY{n}{N}\PY{p}{;} \PY{n}{j}\PY{o}{+}\PY{o}{+}\PY{p}{)}
        \PY{p}{\PYZob{}}
            \PY{n}{unpack\PYZus{}pixel}\PY{p}{(}\PY{o}{*}\PY{p}{(}\PY{n}{p} \PY{o}{+} \PY{n}{i} \PY{o}{*} \PY{n}{N} \PY{o}{+} \PY{n}{j}\PY{p}{)}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{r}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{g}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{b}\PY{p}{)}\PY{p}{;}

            \PY{k}{if} \PY{p}{(}\PY{n}{r} \PY{o}{=}\PY{o}{=} \PY{l+m+mi}{0} \PY{o}{\PYZam{}}\PY{o}{\PYZam{}} \PY{n}{g} \PY{o}{=}\PY{o}{=} \PY{l+m+mi}{0} \PY{o}{\PYZam{}}\PY{o}{\PYZam{}} \PY{n}{b} \PY{o}{=}\PY{o}{=} \PY{l+m+mi}{0}\PY{p}{)}
                \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s}{\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}\PYZhy{}  }\PY{l+s}{\PYZdq{}}\PY{p}{)}\PY{p}{;}
            \PY{k}{else}
                \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s}{\PYZpc{}.1f,\PYZpc{}.1f,\PYZpc{}.1f  }\PY{l+s}{\PYZdq{}}\PY{p}{,} \PY{n}{r}\PY{p}{,} \PY{n}{g}\PY{p}{,} \PY{n}{b}\PY{p}{)}\PY{p}{;}
        \PY{p}{\PYZcb{}}
            
        \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s+se}{\PYZbs{}n}\PY{l+s}{\PYZdq{}}\PY{p}{)}\PY{p}{;}
    \PY{p}{\PYZcb{}}
\PY{p}{\PYZcb{}}

\PY{k+kt}{int} \PY{n+nf}{main}\PY{p}{(}\PY{k+kt}{int} \PY{n}{argc}\PY{p}{,} \PY{k+kt}{char} \PY{o}{*}\PY{o}{*}\PY{n}{argv}\PY{p}{)}
\PY{p}{\PYZob{}}
    \PY{k+kt}{long} \PY{n}{start}\PY{p}{;}
    \PY{n}{pixel} \PY{o}{*}\PY{n}{p} \PY{o}{=} \PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{p}{)} \PY{n}{calloc}\PY{p}{(}\PY{n}{N} \PY{o}{*} \PY{n}{N}\PY{p}{,} \PY{k}{sizeof}\PY{p}{(}\PY{n}{pixel}\PY{p}{)}\PY{p}{)}\PY{p}{;}
    \PY{n}{pixel} \PY{o}{*}\PY{n}{q} \PY{o}{=} \PY{p}{(}\PY{n}{pixel} \PY{o}{*}\PY{p}{)} \PY{n}{calloc}\PY{p}{(}\PY{n}{N} \PY{o}{*} \PY{n}{N}\PY{p}{,} \PY{k}{sizeof}\PY{p}{(}\PY{n}{pixel}\PY{p}{)}\PY{p}{)}\PY{p}{;}
   
    \PY{c+c1}{// calloc will fill the newly allocated memory with zeros.}
    \PY{c+c1}{// These statements put some values in around the top left}
    \PY{c+c1}{// and bottom right corners, just to help with testing for}
    \PY{c+c1}{// correctness.}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{l+m+mf}{0.1}\PY{p}{,} \PY{l+m+mf}{0.1}\PY{p}{,} \PY{l+m+mf}{0.1}\PY{p}{,} \PY{n}{p}\PY{p}{)}\PY{p}{;}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{l+m+mf}{0.2}\PY{p}{,} \PY{l+m+mf}{0.2}\PY{p}{,} \PY{l+m+mf}{0.2}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{p}\PY{p}{[}\PY{l+m+mi}{1}\PY{p}{]}\PY{p}{)}\PY{p}{;}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{l+m+mf}{0.3}\PY{p}{,} \PY{l+m+mf}{0.3}\PY{p}{,} \PY{l+m+mf}{0.3}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{p}\PY{p}{[}\PY{l+m+mi}{2}\PY{p}{]}\PY{p}{)}\PY{p}{;}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{l+m+mf}{0.4}\PY{p}{,} \PY{l+m+mf}{0.4}\PY{p}{,} \PY{l+m+mf}{0.4}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{p}\PY{p}{[}\PY{n}{N}\PY{p}{]}\PY{p}{)}\PY{p}{;}
    \PY{n}{pack\PYZus{}pixel}\PY{p}{(}\PY{l+m+mf}{0.9}\PY{p}{,} \PY{l+m+mf}{0.9}\PY{p}{,} \PY{l+m+mf}{0.9}\PY{p}{,} \PY{o}{\PYZam{}}\PY{n}{p}\PY{p}{[}\PY{n}{N} \PY{o}{*} \PY{n}{N} \PY{o}{\PYZhy{}} \PY{l+m+mi}{1}\PY{p}{]}\PY{p}{)}\PY{p}{;}
   
    \PY{c+c1}{// Follow the pattern here to time function calls in part 2.}
    \PY{n}{start} \PY{o}{=} \PY{n}{clock}\PY{p}{(}\PY{p}{)}\PY{p}{;}
    \PY{n}{rotate1}\PY{p}{(}\PY{n}{p}\PY{p}{,} \PY{n}{q}\PY{p}{)}\PY{p}{;}
    \PY{n}{printf}\PY{p}{(}\PY{l+s}{\PYZdq{}}\PY{l+s}{rotate1: \PYZpc{}.3f seconds}\PY{l+s+se}{\PYZbs{}n}\PY{l+s}{\PYZdq{}}\PY{p}{,}
            \PY{p}{(}\PY{n}{clock}\PY{p}{(}\PY{p}{)} \PY{o}{\PYZhy{}} \PY{n}{start}\PY{p}{)} \PY{o}{/} \PY{p}{(}\PY{k+kt}{double}\PY{p}{)} \PY{n}{CLOCKS\PYZus{}PER\PYZus{}SEC}\PY{p}{)}\PY{p}{;}
    
    \PY{c+c1}{// Comment these out when you move from checking correctness}
    \PY{c+c1}{// for small arrays to checking performance for big arrays.}
    \PY{n}{print\PYZus{}array}\PY{p}{(}\PY{n}{p}\PY{p}{)}\PY{p}{;}
    \PY{n}{print\PYZus{}array}\PY{p}{(}\PY{n}{q}\PY{p}{)}\PY{p}{;}
    
    \PY{k}{return} \PY{l+m+mi}{0}\PY{p}{;}
\PY{p}{\PYZcb{}}
\end{Verbatim}


### Part 2

Using the techniques summarized in section 5.13, and explained
throughout the chapter, create new optimized versions of the
rotate and smooth functions.  Create multiple numbered versions
of each, adding comments to explain what optimizations you
tried, so that you get credit for your work even if some of the
things you try don't improve performance.

You may experiment with different levels of gcc optimizations
(default, `-O1`, `-O2`, `-O3`)---some of the modifications you
make may be significant at one level of optimization but not
at another.

To give you something to shoot for, see if you can create new
versions of `rotate` and `smooth` that run at least twice as
fast as the original versions, for at least one of the
optimization levels.

### Grading

-------- ---------------------------------------------------------
   / 15  pixels.c submitted, shows reasonable effort to complete
         and test Part 1 modifications.
         \
   
   / 15  ...reasonable effort to complete Part 2:  various
         optimization techniques attempted, code in `main` to
         compare new versions of `rotate` and `smooth` with the
         old ones.
         \
   
   / 20  pixels.c compiles and runs without errors.
         \
   
   / 20  New version of `rotate` significantly faster than
         original (at least twice as fast for full credit here).
         \
   
   / 20  New version of `smooth` significantly faster than
         original (at least twice as fast for full credit here).
         \

   / 10  pixels.c has comment with
         student name, and clear and consistent formatting;
         does not have additional errors missed in test runs.
         \
         
   / 10  Up to 10 points extra credit for performance
         improvement beyond what's required (i.e., better than
         twice as fast).  Overall grade for assignment won't
         exceed 100.
-------- --------------------------------------------------------

